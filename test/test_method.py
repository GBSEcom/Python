# coding: utf-8

"""
    Payment Gateway API Specification.

    The documentation here is designed to provide all of the technical guidance required to consume and integrate with our APIs for payment processing. To learn more about our APIs please visit https://docs.firstdata.com/org/gateway.  # noqa: E501

    The version of the OpenAPI document: 6.12.0.20200605.001
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.method import Method  # noqa: E501
from openapi_client.rest import ApiException

class TestMethod(unittest.TestCase):
    """Method unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Method
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.method.Method()  # noqa: E501
        if include_optional :
            return Method(
                method_type = 'method/card', 
                method_id = '300fa792-bf5f-418e-aa74-d5b3c81298d2', 
                method_alias = 'card one', 
                card = {"taToken":"7591787425749818","taTokenKey":"ab56","cardholderName":"John F. Doe","cardNumber":"5424180279791732","expDate":"122028","cvv":"true","issuer":"Bank of America","cardReissuedNumber":"2"}, 
                provider = 'apple', 
                user_defined = {"phoneBrand":"samsung"}
            )
        else :
            return Method(
                method_type = 'method/card',
                card = {"taToken":"7591787425749818","taTokenKey":"ab56","cardholderName":"John F. Doe","cardNumber":"5424180279791732","expDate":"122028","cvv":"true","issuer":"Bank of America","cardReissuedNumber":"2"},
        )

    def testMethod(self):
        """Test Method"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
