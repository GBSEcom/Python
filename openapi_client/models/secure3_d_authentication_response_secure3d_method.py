# coding: utf-8

"""
    Payment Gateway API Specification.

    The documentation here is designed to provide all of the technical guidance required to consume and integrate with our APIs for payment processing. To learn more about our APIs please visit https://docs.firstdata.com/org/gateway.  # noqa: E501

    The version of the OpenAPI document: 21.4.0.20210824.002
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class Secure3DAuthenticationResponseSecure3dMethod(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'method_form': 'str',
        'secure3d_trans_id': 'str'
    }

    attribute_map = {
        'method_form': 'methodForm',
        'secure3d_trans_id': 'secure3dTransId'
    }

    def __init__(self, method_form=None, secure3d_trans_id=None):  # noqa: E501
        """Secure3DAuthenticationResponseSecure3dMethod - a model defined in OpenAPI"""  # noqa: E501

        self._method_form = None
        self._secure3d_trans_id = None
        self.discriminator = None

        if method_form is not None:
            self.method_form = method_form
        if secure3d_trans_id is not None:
            self.secure3d_trans_id = secure3d_trans_id

    @property
    def method_form(self):
        """Gets the method_form of this Secure3DAuthenticationResponseSecure3dMethod.  # noqa: E501

        An iframe to be hidden in the browser used to collect browser data for the issuers. This information adds to the overall consumer profile and helps in identifying potentially fraudulent transactions.  # noqa: E501

        :return: The method_form of this Secure3DAuthenticationResponseSecure3dMethod.  # noqa: E501
        :rtype: str
        """
        return self._method_form

    @method_form.setter
    def method_form(self, method_form):
        """Sets the method_form of this Secure3DAuthenticationResponseSecure3dMethod.

        An iframe to be hidden in the browser used to collect browser data for the issuers. This information adds to the overall consumer profile and helps in identifying potentially fraudulent transactions.  # noqa: E501

        :param method_form: The method_form of this Secure3DAuthenticationResponseSecure3dMethod.  # noqa: E501
        :type: str
        """

        self._method_form = method_form

    @property
    def secure3d_trans_id(self):
        """Gets the secure3d_trans_id of this Secure3DAuthenticationResponseSecure3dMethod.  # noqa: E501

        A unique transaction identifier supplied by the ACS.  # noqa: E501

        :return: The secure3d_trans_id of this Secure3DAuthenticationResponseSecure3dMethod.  # noqa: E501
        :rtype: str
        """
        return self._secure3d_trans_id

    @secure3d_trans_id.setter
    def secure3d_trans_id(self, secure3d_trans_id):
        """Sets the secure3d_trans_id of this Secure3DAuthenticationResponseSecure3dMethod.

        A unique transaction identifier supplied by the ACS.  # noqa: E501

        :param secure3d_trans_id: The secure3d_trans_id of this Secure3DAuthenticationResponseSecure3dMethod.  # noqa: E501
        :type: str
        """

        self._secure3d_trans_id = secure3d_trans_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Secure3DAuthenticationResponseSecure3dMethod):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
